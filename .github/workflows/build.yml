name: Continuous Integration

on:
  workflow_dispatch:
  pull_request:
    branches:
      - main
  push:
    branches:
      - ci

env:
  CN_APP_SLUG: verso/verso-nightly

jobs:
  build-linux:
    name: Build [Linux]
    runs-on: ubuntu-22.04
    env:
      RUSTC_WRAPPER: sccache
      CCACHE: sccache
      SCCACHE_GHA_ENABLED: "true"
      WAYLAND_DISPLAY: wayland-1
      WLR_BACKENDS: headless
      WLR_LIBINPUT_NO_DEVICES: 1
      XDG_RUNTIME_DIR: /tmp
      XDG_SESSION_TYPE: wayland
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install -y libunwind-dev 

      - name: Install Rust
        uses: dsherret/rust-toolchain-file@v1

      - name: Run sccache-cache
        uses: Mozilla-Actions/sccache-action@v0.0.4

      - name: Build Versoview
        run: cargo build --release
        
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: versoview_linux
          path: target/release/versoview

  build-windows:
    name: Build [Windows]
    runs-on: windows-latest
    env:
      CCACHE: sccache
      SCCACHE_GHA_ENABLED: "true"
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dsherret/rust-toolchain-file@v1

      - name: Run sccache-cache
        uses: Mozilla-Actions/sccache-action@v0.0.4

      - name: Build
        run: |
          cargo build --release

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: versoview_windows
          path: target\release\versoview.exe

  build-macos:
    name: Build [macOS]
    strategy:
      fail-fast: false
      matrix:
        platform:
          - { target: aarch64-apple-darwin, os: macos-latest, arch: aarch64 }
          - { target: x86_64-apple-darwin, os: macos-13, arch: x64 }
    runs-on: ${{ matrix.platform.os }}
    env:
      RUSTC_WRAPPER: sccache
      CCACHE: sccache
      SCCACHE_GHA_ENABLED: "true"
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dsherret/rust-toolchain-file@v1

      - name: Install dependencies
        run: |
          brew install cmake
          python -m pip install mako
          curl https://gstreamer.freedesktop.org/data/pkg/osx/1.24.6/gstreamer-1.0-1.24.6-universal.pkg -o runtime.pkg
          sudo installer -pkg runtime.pkg -target /
          curl https://gstreamer.freedesktop.org/data/pkg/osx/1.24.6/gstreamer-1.0-devel-1.24.6-universal.pkg -o develop.pkg
          sudo installer -pkg develop.pkg -target /

      - name: Run sccache-cache
        uses: Mozilla-Actions/sccache-action@v0.0.4

      - name: Build
        run: |
          export PATH="/Library/Frameworks/GStreamer.framework/Versions/1.0/bin${PATH:+:$PATH}"
          export DYLD_LIBRARY_PATH="/Library/Frameworks/GStreamer.framework/Versions/1.0/lib${DYLD_LIBRARY_PATH:+:$DYLD_LIBRARY_PATH}"
          cargo build --release

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: verso_${{ env.VERSO_VERSION }}_${{ matrix.platform.arch }}_dmg
          path: target/release/verso_${{ matrix.platform.arch }}
